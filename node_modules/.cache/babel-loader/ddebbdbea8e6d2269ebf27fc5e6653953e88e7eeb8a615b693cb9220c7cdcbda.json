{"ast":null,"code":"var _jsxFileName = \"/Users/SA/react js /agecalculator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DatePicker, Row, Col, Card } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [date, setdate] = useState(\"\");\n  const [todaydate, settodaydate] = useState(\"\");\n  let today = new Date().getDate() + \"/\" + (new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n  const onChange = (date, dateString) => {\n    let datee = (date, dateString);\n    setdate(datee);\n    console.log(datee);\n    console.log(today);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Your DOB is : \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Today date is : \", today]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      picker: \"date\",\n      onChange: onChange,\n      format: \"DD/MM/YYYY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1QzKR3ACm6CGO13lFxexPn0P6A4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DatePicker","Row","Col","Card","App","date","setdate","todaydate","settodaydate","today","Date","getDate","getMonth","getFullYear","onChange","dateString","datee","console","log"],"sources":["/Users/SA/react js /agecalculator/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\nimport { DatePicker,Row, Col, Card} from 'antd';\n\nfunction App() {\n  const [date, setdate]= useState(\"\");\n  const [todaydate, settodaydate]= useState(\"\");\n  let today = new Date().getDate()+\"/\"+(new Date().getMonth()+1)+\"/\"+new Date().getFullYear();\n \n  const onChange = ( date,dateString) => {\n    let datee= ( date,dateString);\n    setdate(datee);\n    console.log(datee);\n    console.log(today);\n  };\n  return (\n   \n\n    <div className=\"App\">\n      <h1>Your DOB is : {date}</h1>\n      <h1>Today date is : {today}</h1>\n    <DatePicker picker=\"date\" onChange={onChange} format=\"DD/MM/YYYY\"/>\n   \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,SAASC,UAAU,EAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAO,MAAM;AAAC;AAEhD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAEP,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAET,QAAQ,CAAC,EAAE,CAAC;EAC7C,IAAIU,KAAK,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,GAAC,GAAG,IAAE,IAAID,IAAI,EAAE,CAACE,QAAQ,EAAE,GAAC,CAAC,CAAC,GAAC,GAAG,GAAC,IAAIF,IAAI,EAAE,CAACG,WAAW,EAAE;EAE3F,MAAMC,QAAQ,GAAG,CAAET,IAAI,EAACU,UAAU,KAAK;IACrC,IAAIC,KAAK,IAAIX,IAAI,EAACU,UAAU,CAAC;IAC7BT,OAAO,CAACU,KAAK,CAAC;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;EACpB,CAAC;EACD,oBAGE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,WAAI,gBAAc,EAACJ,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAC7B;MAAA,WAAI,kBAAgB,EAACI,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAClC,QAAC,UAAU;MAAC,MAAM,EAAC,MAAM;MAAC,QAAQ,EAAEK,QAAS;MAAC,MAAM,EAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAE7D;AAEV;AAAC,GArBQV,GAAG;AAAA,KAAHA,GAAG;AAuBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}